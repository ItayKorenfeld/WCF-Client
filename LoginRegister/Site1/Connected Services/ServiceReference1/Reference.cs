//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Site1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="StudentList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Student")]
    [System.SerializableAttribute()]
    public class StudentList : System.Collections.Generic.List<Site1.ServiceReference1.Student> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Student : Site1.ServiceReference1.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Site1.ServiceReference1.Class ClasssField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Site1.ServiceReference1.Class Classs {
            get {
                return this.ClasssField;
            }
            set {
                if ((object.ReferenceEquals(this.ClasssField, value) != true)) {
                    this.ClasssField = value;
                    this.RaisePropertyChanged("Classs");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Site1.ServiceReference1.Report))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Site1.ServiceReference1.Class))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Site1.ServiceReference1.School))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Site1.ServiceReference1.Tools))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Site1.ServiceReference1.ToolName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Site1.ServiceReference1.Problems))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Site1.ServiceReference1.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Site1.ServiceReference1.HouseKeeper))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Site1.ServiceReference1.Student))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Report", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Site1.ServiceReference1.Problems))]
    public partial class Report : Site1.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Site1.ServiceReference1.Class ClasssField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Site1.ServiceReference1.Student StudentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Site1.ServiceReference1.Tools ToolsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Site1.ServiceReference1.Class Classs {
            get {
                return this.ClasssField;
            }
            set {
                if ((object.ReferenceEquals(this.ClasssField, value) != true)) {
                    this.ClasssField = value;
                    this.RaisePropertyChanged("Classs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Site1.ServiceReference1.Student Student {
            get {
                return this.StudentField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentField, value) != true)) {
                    this.StudentField = value;
                    this.RaisePropertyChanged("Student");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Site1.ServiceReference1.Tools Tools {
            get {
                return this.ToolsField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolsField, value) != true)) {
                    this.ToolsField = value;
                    this.RaisePropertyChanged("Tools");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Class", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Class : Site1.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Site1.ServiceReference1.School SchoolField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Site1.ServiceReference1.School School {
            get {
                return this.SchoolField;
            }
            set {
                if ((object.ReferenceEquals(this.SchoolField, value) != true)) {
                    this.SchoolField = value;
                    this.RaisePropertyChanged("School");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="School", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class School : Site1.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Site1.ServiceReference1.ClassList ClasslistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchoolNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Site1.ServiceReference1.ClassList Classlist {
            get {
                return this.ClasslistField;
            }
            set {
                if ((object.ReferenceEquals(this.ClasslistField, value) != true)) {
                    this.ClasslistField = value;
                    this.RaisePropertyChanged("Classlist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchoolName {
            get {
                return this.SchoolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SchoolNameField, value) != true)) {
                    this.SchoolNameField = value;
                    this.RaisePropertyChanged("SchoolName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tools", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Tools : Site1.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Site1.ServiceReference1.Class ClasssField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Site1.ServiceReference1.ToolName ToolNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Site1.ServiceReference1.Class Classs {
            get {
                return this.ClasssField;
            }
            set {
                if ((object.ReferenceEquals(this.ClasssField, value) != true)) {
                    this.ClasssField = value;
                    this.RaisePropertyChanged("Classs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Site1.ServiceReference1.ToolName ToolName {
            get {
                return this.ToolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolNameField, value) != true)) {
                    this.ToolNameField = value;
                    this.RaisePropertyChanged("ToolName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToolName", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class ToolName : Site1.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolName1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolName1 {
            get {
                return this.ToolName1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ToolName1Field, value) != true)) {
                    this.ToolName1Field = value;
                    this.RaisePropertyChanged("ToolName1");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Problems", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Problems : Site1.ServiceReference1.Report {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IssolvedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SolvingTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Issolved {
            get {
                return this.IssolvedField;
            }
            set {
                if ((this.IssolvedField.Equals(value) != true)) {
                    this.IssolvedField = value;
                    this.RaisePropertyChanged("Issolved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SolvingTime {
            get {
                return this.SolvingTimeField;
            }
            set {
                if ((this.SolvingTimeField.Equals(value) != true)) {
                    this.SolvingTimeField = value;
                    this.RaisePropertyChanged("SolvingTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Site1.ServiceReference1.HouseKeeper))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Site1.ServiceReference1.Student))]
    public partial class Person : Site1.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RealidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Site1.ServiceReference1.School SchoolField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Realid {
            get {
                return this.RealidField;
            }
            set {
                if ((object.ReferenceEquals(this.RealidField, value) != true)) {
                    this.RealidField = value;
                    this.RaisePropertyChanged("Realid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Site1.ServiceReference1.School School {
            get {
                return this.SchoolField;
            }
            set {
                if ((object.ReferenceEquals(this.SchoolField, value) != true)) {
                    this.SchoolField = value;
                    this.RaisePropertyChanged("School");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HouseKeeper", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class HouseKeeper : Site1.ServiceReference1.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime JoinDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime JoinDate {
            get {
                return this.JoinDateField;
            }
            set {
                if ((this.JoinDateField.Equals(value) != true)) {
                    this.JoinDateField = value;
                    this.RaisePropertyChanged("JoinDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ClassList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Class")]
    [System.SerializableAttribute()]
    public class ClassList : System.Collections.Generic.List<Site1.ServiceReference1.Class> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="HouseKeeperList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="HouseKeeper")]
    [System.SerializableAttribute()]
    public class HouseKeeperList : System.Collections.Generic.List<Site1.ServiceReference1.HouseKeeper> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ToolList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Tools")]
    [System.SerializableAttribute()]
    public class ToolList : System.Collections.Generic.List<Site1.ServiceReference1.Tools> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ProblemsList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Problems")]
    [System.SerializableAttribute()]
    public class ProblemsList : System.Collections.Generic.List<Site1.ServiceReference1.Problems> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SchoolList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="School")]
    [System.SerializableAttribute()]
    public class SchoolList : System.Collections.Generic.List<Site1.ServiceReference1.School> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ToolNameList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="ToolName")]
    [System.SerializableAttribute()]
    public class ToolNameList : System.Collections.Generic.List<Site1.ServiceReference1.ToolName> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllStudents", ReplyAction="http://tempuri.org/IService1/SelectAllStudentsResponse")]
        Site1.ServiceReference1.StudentList SelectAllStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllStudents", ReplyAction="http://tempuri.org/IService1/SelectAllStudentsResponse")]
        System.Threading.Tasks.Task<Site1.ServiceReference1.StudentList> SelectAllStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllHousekeepers", ReplyAction="http://tempuri.org/IService1/SelectAllHousekeepersResponse")]
        Site1.ServiceReference1.HouseKeeperList SelectAllHousekeepers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllHousekeepers", ReplyAction="http://tempuri.org/IService1/SelectAllHousekeepersResponse")]
        System.Threading.Tasks.Task<Site1.ServiceReference1.HouseKeeperList> SelectAllHousekeepersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllTools", ReplyAction="http://tempuri.org/IService1/SelectAllToolsResponse")]
        Site1.ServiceReference1.ToolList SelectAllTools();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllTools", ReplyAction="http://tempuri.org/IService1/SelectAllToolsResponse")]
        System.Threading.Tasks.Task<Site1.ServiceReference1.ToolList> SelectAllToolsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllProblems", ReplyAction="http://tempuri.org/IService1/SelectAllProblemsResponse")]
        Site1.ServiceReference1.ProblemsList SelectAllProblems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllProblems", ReplyAction="http://tempuri.org/IService1/SelectAllProblemsResponse")]
        System.Threading.Tasks.Task<Site1.ServiceReference1.ProblemsList> SelectAllProblemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllSchools", ReplyAction="http://tempuri.org/IService1/SelectAllSchoolsResponse")]
        Site1.ServiceReference1.SchoolList SelectAllSchools();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllSchools", ReplyAction="http://tempuri.org/IService1/SelectAllSchoolsResponse")]
        System.Threading.Tasks.Task<Site1.ServiceReference1.SchoolList> SelectAllSchoolsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllClass", ReplyAction="http://tempuri.org/IService1/SelectAllClassResponse")]
        Site1.ServiceReference1.ClassList SelectAllClass();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllClass", ReplyAction="http://tempuri.org/IService1/SelectAllClassResponse")]
        System.Threading.Tasks.Task<Site1.ServiceReference1.ClassList> SelectAllClassAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertAClass", ReplyAction="http://tempuri.org/IService1/InsertAClassResponse")]
        int InsertAClass(string className, int schoolid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertAClass", ReplyAction="http://tempuri.org/IService1/InsertAClassResponse")]
        System.Threading.Tasks.Task<int> InsertAClassAsync(string className, int schoolid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertAStudent", ReplyAction="http://tempuri.org/IService1/InsertAStudentResponse")]
        int InsertAStudent(string password, string firstName, string lastName, int schoolid, string realid, string phonenumber, int classid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertAStudent", ReplyAction="http://tempuri.org/IService1/InsertAStudentResponse")]
        System.Threading.Tasks.Task<int> InsertAStudentAsync(string password, string firstName, string lastName, int schoolid, string realid, string phonenumber, int classid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertAHouseKeeper", ReplyAction="http://tempuri.org/IService1/InsertAHouseKeeperResponse")]
        int InsertAHouseKeeper(string password, string firstName, string lastName, int schoolid, string realid, string phonenumber, System.DateTime joinDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertAHouseKeeper", ReplyAction="http://tempuri.org/IService1/InsertAHouseKeeperResponse")]
        System.Threading.Tasks.Task<int> InsertAHouseKeeperAsync(string password, string firstName, string lastName, int schoolid, string realid, string phonenumber, System.DateTime joinDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertAProblem", ReplyAction="http://tempuri.org/IService1/InsertAProblemResponse")]
        int InsertAProblem(int classid, int toolid, string description, int studentid, System.DateTime solvingTime, bool issolved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertAProblem", ReplyAction="http://tempuri.org/IService1/InsertAProblemResponse")]
        System.Threading.Tasks.Task<int> InsertAProblemAsync(int classid, int toolid, string description, int studentid, System.DateTime solvingTime, bool issolved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertASchool", ReplyAction="http://tempuri.org/IService1/InsertASchoolResponse")]
        int InsertASchool(string schoolName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertASchool", ReplyAction="http://tempuri.org/IService1/InsertASchoolResponse")]
        System.Threading.Tasks.Task<int> InsertASchoolAsync(string schoolName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertAToolName", ReplyAction="http://tempuri.org/IService1/InsertAToolNameResponse")]
        int InsertAToolName(string toolName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertAToolName", ReplyAction="http://tempuri.org/IService1/InsertAToolNameResponse")]
        System.Threading.Tasks.Task<int> InsertAToolNameAsync(string toolName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertATool", ReplyAction="http://tempuri.org/IService1/InsertAToolResponse")]
        int InsertATool(int toolNamecode, int classid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertATool", ReplyAction="http://tempuri.org/IService1/InsertAToolResponse")]
        System.Threading.Tasks.Task<int> InsertAToolAsync(int toolNamecode, int classid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateStudent", ReplyAction="http://tempuri.org/IService1/UpdateStudentResponse")]
        int UpdateStudent(Site1.ServiceReference1.Student c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateStudent", ReplyAction="http://tempuri.org/IService1/UpdateStudentResponse")]
        System.Threading.Tasks.Task<int> UpdateStudentAsync(Site1.ServiceReference1.Student c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateHouseKeeper", ReplyAction="http://tempuri.org/IService1/UpdateHouseKeeperResponse")]
        int UpdateHouseKeeper(Site1.ServiceReference1.HouseKeeper c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateHouseKeeper", ReplyAction="http://tempuri.org/IService1/UpdateHouseKeeperResponse")]
        System.Threading.Tasks.Task<int> UpdateHouseKeeperAsync(Site1.ServiceReference1.HouseKeeper c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProblem", ReplyAction="http://tempuri.org/IService1/UpdateProblemResponse")]
        int UpdateProblem(Site1.ServiceReference1.Problems c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProblem", ReplyAction="http://tempuri.org/IService1/UpdateProblemResponse")]
        System.Threading.Tasks.Task<int> UpdateProblemAsync(Site1.ServiceReference1.Problems c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateClass", ReplyAction="http://tempuri.org/IService1/UpdateClassResponse")]
        int UpdateClass(Site1.ServiceReference1.Class c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateClass", ReplyAction="http://tempuri.org/IService1/UpdateClassResponse")]
        System.Threading.Tasks.Task<int> UpdateClassAsync(Site1.ServiceReference1.Class c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateSchool", ReplyAction="http://tempuri.org/IService1/UpdateSchoolResponse")]
        int UpdateSchool(Site1.ServiceReference1.School c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateSchool", ReplyAction="http://tempuri.org/IService1/UpdateSchoolResponse")]
        System.Threading.Tasks.Task<int> UpdateSchoolAsync(Site1.ServiceReference1.School c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateToolName", ReplyAction="http://tempuri.org/IService1/UpdateToolNameResponse")]
        int UpdateToolName(Site1.ServiceReference1.ToolName c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateToolName", ReplyAction="http://tempuri.org/IService1/UpdateToolNameResponse")]
        System.Threading.Tasks.Task<int> UpdateToolNameAsync(Site1.ServiceReference1.ToolName c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTool", ReplyAction="http://tempuri.org/IService1/UpdateToolResponse")]
        int UpdateTool(Site1.ServiceReference1.Tools c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTool", ReplyAction="http://tempuri.org/IService1/UpdateToolResponse")]
        System.Threading.Tasks.Task<int> UpdateToolAsync(Site1.ServiceReference1.Tools c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStudent", ReplyAction="http://tempuri.org/IService1/DeleteStudentResponse")]
        int DeleteStudent(Site1.ServiceReference1.Student c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStudent", ReplyAction="http://tempuri.org/IService1/DeleteStudentResponse")]
        System.Threading.Tasks.Task<int> DeleteStudentAsync(Site1.ServiceReference1.Student c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteHouseKeeper", ReplyAction="http://tempuri.org/IService1/DeleteHouseKeeperResponse")]
        int DeleteHouseKeeper(Site1.ServiceReference1.HouseKeeper c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteHouseKeeper", ReplyAction="http://tempuri.org/IService1/DeleteHouseKeeperResponse")]
        System.Threading.Tasks.Task<int> DeleteHouseKeeperAsync(Site1.ServiceReference1.HouseKeeper c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProblem", ReplyAction="http://tempuri.org/IService1/DeleteProblemResponse")]
        int DeleteProblem(Site1.ServiceReference1.Problems c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProblem", ReplyAction="http://tempuri.org/IService1/DeleteProblemResponse")]
        System.Threading.Tasks.Task<int> DeleteProblemAsync(Site1.ServiceReference1.Problems c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteClass", ReplyAction="http://tempuri.org/IService1/DeleteClassResponse")]
        int DeleteClass(Site1.ServiceReference1.Class c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteClass", ReplyAction="http://tempuri.org/IService1/DeleteClassResponse")]
        System.Threading.Tasks.Task<int> DeleteClassAsync(Site1.ServiceReference1.Class c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSchool", ReplyAction="http://tempuri.org/IService1/DeleteSchoolResponse")]
        int DeleteSchool(Site1.ServiceReference1.School c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSchool", ReplyAction="http://tempuri.org/IService1/DeleteSchoolResponse")]
        System.Threading.Tasks.Task<int> DeleteSchoolAsync(Site1.ServiceReference1.School c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteToolName", ReplyAction="http://tempuri.org/IService1/DeleteToolNameResponse")]
        int DeleteToolName(Site1.ServiceReference1.ToolName c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteToolName", ReplyAction="http://tempuri.org/IService1/DeleteToolNameResponse")]
        System.Threading.Tasks.Task<int> DeleteToolNameAsync(Site1.ServiceReference1.ToolName c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteTool", ReplyAction="http://tempuri.org/IService1/DeleteToolResponse")]
        int DeleteTool(Site1.ServiceReference1.Tools c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteTool", ReplyAction="http://tempuri.org/IService1/DeleteToolResponse")]
        System.Threading.Tasks.Task<int> DeleteToolAsync(Site1.ServiceReference1.Tools c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        Site1.ServiceReference1.Student Login(string phonenumber, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<Site1.ServiceReference1.Student> LoginAsync(string phonenumber, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login1", ReplyAction="http://tempuri.org/IService1/Login1Response")]
        Site1.ServiceReference1.HouseKeeper Login1(string phonenumber, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login1", ReplyAction="http://tempuri.org/IService1/Login1Response")]
        System.Threading.Tasks.Task<Site1.ServiceReference1.HouseKeeper> Login1Async(string phonenumber, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllProblemsSameSchoolh", ReplyAction="http://tempuri.org/IService1/SelectAllProblemsSameSchoolhResponse")]
        Site1.ServiceReference1.ProblemsList SelectAllProblemsSameSchoolh(Site1.ServiceReference1.HouseKeeper h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllProblemsSameSchoolh", ReplyAction="http://tempuri.org/IService1/SelectAllProblemsSameSchoolhResponse")]
        System.Threading.Tasks.Task<Site1.ServiceReference1.ProblemsList> SelectAllProblemsSameSchoolhAsync(Site1.ServiceReference1.HouseKeeper h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllProblemsSameSchools", ReplyAction="http://tempuri.org/IService1/SelectAllProblemsSameSchoolsResponse")]
        Site1.ServiceReference1.ProblemsList SelectAllProblemsSameSchools(Site1.ServiceReference1.Student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllProblemsSameSchools", ReplyAction="http://tempuri.org/IService1/SelectAllProblemsSameSchoolsResponse")]
        System.Threading.Tasks.Task<Site1.ServiceReference1.ProblemsList> SelectAllProblemsSameSchoolsAsync(Site1.ServiceReference1.Student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectclassByID", ReplyAction="http://tempuri.org/IService1/SelectclassByIDResponse")]
        Site1.ServiceReference1.Class SelectclassByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectclassByID", ReplyAction="http://tempuri.org/IService1/SelectclassByIDResponse")]
        System.Threading.Tasks.Task<Site1.ServiceReference1.Class> SelectclassByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllToolName", ReplyAction="http://tempuri.org/IService1/SelectAllToolNameResponse")]
        Site1.ServiceReference1.ToolNameList SelectAllToolName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllToolName", ReplyAction="http://tempuri.org/IService1/SelectAllToolNameResponse")]
        System.Threading.Tasks.Task<Site1.ServiceReference1.ToolNameList> SelectAllToolNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectProblemsFilter", ReplyAction="http://tempuri.org/IService1/SelectProblemsFilterResponse")]
        Site1.ServiceReference1.ProblemsList SelectProblemsFilter(string command);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectProblemsFilter", ReplyAction="http://tempuri.org/IService1/SelectProblemsFilterResponse")]
        System.Threading.Tasks.Task<Site1.ServiceReference1.ProblemsList> SelectProblemsFilterAsync(string command);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Site1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Site1.ServiceReference1.IService1>, Site1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Site1.ServiceReference1.StudentList SelectAllStudents() {
            return base.Channel.SelectAllStudents();
        }
        
        public System.Threading.Tasks.Task<Site1.ServiceReference1.StudentList> SelectAllStudentsAsync() {
            return base.Channel.SelectAllStudentsAsync();
        }
        
        public Site1.ServiceReference1.HouseKeeperList SelectAllHousekeepers() {
            return base.Channel.SelectAllHousekeepers();
        }
        
        public System.Threading.Tasks.Task<Site1.ServiceReference1.HouseKeeperList> SelectAllHousekeepersAsync() {
            return base.Channel.SelectAllHousekeepersAsync();
        }
        
        public Site1.ServiceReference1.ToolList SelectAllTools() {
            return base.Channel.SelectAllTools();
        }
        
        public System.Threading.Tasks.Task<Site1.ServiceReference1.ToolList> SelectAllToolsAsync() {
            return base.Channel.SelectAllToolsAsync();
        }
        
        public Site1.ServiceReference1.ProblemsList SelectAllProblems() {
            return base.Channel.SelectAllProblems();
        }
        
        public System.Threading.Tasks.Task<Site1.ServiceReference1.ProblemsList> SelectAllProblemsAsync() {
            return base.Channel.SelectAllProblemsAsync();
        }
        
        public Site1.ServiceReference1.SchoolList SelectAllSchools() {
            return base.Channel.SelectAllSchools();
        }
        
        public System.Threading.Tasks.Task<Site1.ServiceReference1.SchoolList> SelectAllSchoolsAsync() {
            return base.Channel.SelectAllSchoolsAsync();
        }
        
        public Site1.ServiceReference1.ClassList SelectAllClass() {
            return base.Channel.SelectAllClass();
        }
        
        public System.Threading.Tasks.Task<Site1.ServiceReference1.ClassList> SelectAllClassAsync() {
            return base.Channel.SelectAllClassAsync();
        }
        
        public int InsertAClass(string className, int schoolid) {
            return base.Channel.InsertAClass(className, schoolid);
        }
        
        public System.Threading.Tasks.Task<int> InsertAClassAsync(string className, int schoolid) {
            return base.Channel.InsertAClassAsync(className, schoolid);
        }
        
        public int InsertAStudent(string password, string firstName, string lastName, int schoolid, string realid, string phonenumber, int classid) {
            return base.Channel.InsertAStudent(password, firstName, lastName, schoolid, realid, phonenumber, classid);
        }
        
        public System.Threading.Tasks.Task<int> InsertAStudentAsync(string password, string firstName, string lastName, int schoolid, string realid, string phonenumber, int classid) {
            return base.Channel.InsertAStudentAsync(password, firstName, lastName, schoolid, realid, phonenumber, classid);
        }
        
        public int InsertAHouseKeeper(string password, string firstName, string lastName, int schoolid, string realid, string phonenumber, System.DateTime joinDate) {
            return base.Channel.InsertAHouseKeeper(password, firstName, lastName, schoolid, realid, phonenumber, joinDate);
        }
        
        public System.Threading.Tasks.Task<int> InsertAHouseKeeperAsync(string password, string firstName, string lastName, int schoolid, string realid, string phonenumber, System.DateTime joinDate) {
            return base.Channel.InsertAHouseKeeperAsync(password, firstName, lastName, schoolid, realid, phonenumber, joinDate);
        }
        
        public int InsertAProblem(int classid, int toolid, string description, int studentid, System.DateTime solvingTime, bool issolved) {
            return base.Channel.InsertAProblem(classid, toolid, description, studentid, solvingTime, issolved);
        }
        
        public System.Threading.Tasks.Task<int> InsertAProblemAsync(int classid, int toolid, string description, int studentid, System.DateTime solvingTime, bool issolved) {
            return base.Channel.InsertAProblemAsync(classid, toolid, description, studentid, solvingTime, issolved);
        }
        
        public int InsertASchool(string schoolName) {
            return base.Channel.InsertASchool(schoolName);
        }
        
        public System.Threading.Tasks.Task<int> InsertASchoolAsync(string schoolName) {
            return base.Channel.InsertASchoolAsync(schoolName);
        }
        
        public int InsertAToolName(string toolName) {
            return base.Channel.InsertAToolName(toolName);
        }
        
        public System.Threading.Tasks.Task<int> InsertAToolNameAsync(string toolName) {
            return base.Channel.InsertAToolNameAsync(toolName);
        }
        
        public int InsertATool(int toolNamecode, int classid) {
            return base.Channel.InsertATool(toolNamecode, classid);
        }
        
        public System.Threading.Tasks.Task<int> InsertAToolAsync(int toolNamecode, int classid) {
            return base.Channel.InsertAToolAsync(toolNamecode, classid);
        }
        
        public int UpdateStudent(Site1.ServiceReference1.Student c) {
            return base.Channel.UpdateStudent(c);
        }
        
        public System.Threading.Tasks.Task<int> UpdateStudentAsync(Site1.ServiceReference1.Student c) {
            return base.Channel.UpdateStudentAsync(c);
        }
        
        public int UpdateHouseKeeper(Site1.ServiceReference1.HouseKeeper c) {
            return base.Channel.UpdateHouseKeeper(c);
        }
        
        public System.Threading.Tasks.Task<int> UpdateHouseKeeperAsync(Site1.ServiceReference1.HouseKeeper c) {
            return base.Channel.UpdateHouseKeeperAsync(c);
        }
        
        public int UpdateProblem(Site1.ServiceReference1.Problems c) {
            return base.Channel.UpdateProblem(c);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProblemAsync(Site1.ServiceReference1.Problems c) {
            return base.Channel.UpdateProblemAsync(c);
        }
        
        public int UpdateClass(Site1.ServiceReference1.Class c) {
            return base.Channel.UpdateClass(c);
        }
        
        public System.Threading.Tasks.Task<int> UpdateClassAsync(Site1.ServiceReference1.Class c) {
            return base.Channel.UpdateClassAsync(c);
        }
        
        public int UpdateSchool(Site1.ServiceReference1.School c) {
            return base.Channel.UpdateSchool(c);
        }
        
        public System.Threading.Tasks.Task<int> UpdateSchoolAsync(Site1.ServiceReference1.School c) {
            return base.Channel.UpdateSchoolAsync(c);
        }
        
        public int UpdateToolName(Site1.ServiceReference1.ToolName c) {
            return base.Channel.UpdateToolName(c);
        }
        
        public System.Threading.Tasks.Task<int> UpdateToolNameAsync(Site1.ServiceReference1.ToolName c) {
            return base.Channel.UpdateToolNameAsync(c);
        }
        
        public int UpdateTool(Site1.ServiceReference1.Tools c) {
            return base.Channel.UpdateTool(c);
        }
        
        public System.Threading.Tasks.Task<int> UpdateToolAsync(Site1.ServiceReference1.Tools c) {
            return base.Channel.UpdateToolAsync(c);
        }
        
        public int DeleteStudent(Site1.ServiceReference1.Student c) {
            return base.Channel.DeleteStudent(c);
        }
        
        public System.Threading.Tasks.Task<int> DeleteStudentAsync(Site1.ServiceReference1.Student c) {
            return base.Channel.DeleteStudentAsync(c);
        }
        
        public int DeleteHouseKeeper(Site1.ServiceReference1.HouseKeeper c) {
            return base.Channel.DeleteHouseKeeper(c);
        }
        
        public System.Threading.Tasks.Task<int> DeleteHouseKeeperAsync(Site1.ServiceReference1.HouseKeeper c) {
            return base.Channel.DeleteHouseKeeperAsync(c);
        }
        
        public int DeleteProblem(Site1.ServiceReference1.Problems c) {
            return base.Channel.DeleteProblem(c);
        }
        
        public System.Threading.Tasks.Task<int> DeleteProblemAsync(Site1.ServiceReference1.Problems c) {
            return base.Channel.DeleteProblemAsync(c);
        }
        
        public int DeleteClass(Site1.ServiceReference1.Class c) {
            return base.Channel.DeleteClass(c);
        }
        
        public System.Threading.Tasks.Task<int> DeleteClassAsync(Site1.ServiceReference1.Class c) {
            return base.Channel.DeleteClassAsync(c);
        }
        
        public int DeleteSchool(Site1.ServiceReference1.School c) {
            return base.Channel.DeleteSchool(c);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSchoolAsync(Site1.ServiceReference1.School c) {
            return base.Channel.DeleteSchoolAsync(c);
        }
        
        public int DeleteToolName(Site1.ServiceReference1.ToolName c) {
            return base.Channel.DeleteToolName(c);
        }
        
        public System.Threading.Tasks.Task<int> DeleteToolNameAsync(Site1.ServiceReference1.ToolName c) {
            return base.Channel.DeleteToolNameAsync(c);
        }
        
        public int DeleteTool(Site1.ServiceReference1.Tools c) {
            return base.Channel.DeleteTool(c);
        }
        
        public System.Threading.Tasks.Task<int> DeleteToolAsync(Site1.ServiceReference1.Tools c) {
            return base.Channel.DeleteToolAsync(c);
        }
        
        public Site1.ServiceReference1.Student Login(string phonenumber, string password) {
            return base.Channel.Login(phonenumber, password);
        }
        
        public System.Threading.Tasks.Task<Site1.ServiceReference1.Student> LoginAsync(string phonenumber, string password) {
            return base.Channel.LoginAsync(phonenumber, password);
        }
        
        public Site1.ServiceReference1.HouseKeeper Login1(string phonenumber, string password) {
            return base.Channel.Login1(phonenumber, password);
        }
        
        public System.Threading.Tasks.Task<Site1.ServiceReference1.HouseKeeper> Login1Async(string phonenumber, string password) {
            return base.Channel.Login1Async(phonenumber, password);
        }
        
        public Site1.ServiceReference1.ProblemsList SelectAllProblemsSameSchoolh(Site1.ServiceReference1.HouseKeeper h) {
            return base.Channel.SelectAllProblemsSameSchoolh(h);
        }
        
        public System.Threading.Tasks.Task<Site1.ServiceReference1.ProblemsList> SelectAllProblemsSameSchoolhAsync(Site1.ServiceReference1.HouseKeeper h) {
            return base.Channel.SelectAllProblemsSameSchoolhAsync(h);
        }
        
        public Site1.ServiceReference1.ProblemsList SelectAllProblemsSameSchools(Site1.ServiceReference1.Student s) {
            return base.Channel.SelectAllProblemsSameSchools(s);
        }
        
        public System.Threading.Tasks.Task<Site1.ServiceReference1.ProblemsList> SelectAllProblemsSameSchoolsAsync(Site1.ServiceReference1.Student s) {
            return base.Channel.SelectAllProblemsSameSchoolsAsync(s);
        }
        
        public Site1.ServiceReference1.Class SelectclassByID(int id) {
            return base.Channel.SelectclassByID(id);
        }
        
        public System.Threading.Tasks.Task<Site1.ServiceReference1.Class> SelectclassByIDAsync(int id) {
            return base.Channel.SelectclassByIDAsync(id);
        }
        
        public Site1.ServiceReference1.ToolNameList SelectAllToolName() {
            return base.Channel.SelectAllToolName();
        }
        
        public System.Threading.Tasks.Task<Site1.ServiceReference1.ToolNameList> SelectAllToolNameAsync() {
            return base.Channel.SelectAllToolNameAsync();
        }
        
        public Site1.ServiceReference1.ProblemsList SelectProblemsFilter(string command) {
            return base.Channel.SelectProblemsFilter(command);
        }
        
        public System.Threading.Tasks.Task<Site1.ServiceReference1.ProblemsList> SelectProblemsFilterAsync(string command) {
            return base.Channel.SelectProblemsFilterAsync(command);
        }
    }
}
